<?xml version="1.0" ?>
<Lems xmlns="http://www.neuroml.org/lems/0.7.3" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:schemaLocation="http://www.neuroml.org/lems/0.7.3 https://raw.githubusercontent.com/LEMS/LEMS/development/Schemas/LEMS/LEMS_v0.7.3.xsd">
  <ComponentType description="Base type for PNL based Mechanism" extends="baseCellMembPotDL" name="pnlMechanism">
    <Exposure dimension="none" name="OUTPUT"/>
    <Exposure dimension="none" name="INPUT"/>
  </ComponentType>
  <ComponentType description="Base type for PNL based TransferMechanism" extends="pnlMechanism" name="pnlTransferMechanism"/>
  <ComponentType description="Base type for PNL based IntegratorMechanism" extends="pnlMechanism" name="pnlIntegratorMechanism"/>
  <ComponentType description="..." extends="pnlIntegratorMechanism" name="pnlSimpleIntegratorMechanism">
    <Parameter dimension="none" name="rate"/>
    <Parameter dimension="time" name="time_step_size"/>
    <Attachments name="synapses" type="basePointCurrentDL"/>
    <Dynamics>
      <StateVariable dimension="none" exposure="OUTPUT" name="OUTPUT"/>
      <DerivedVariable dimension="none" exposure="INPUT" name="INPUT" reduce="add" select="synapses[*]/I"/>
      <DerivedVariable dimension="none" exposure="V" name="V" value="0"/>
      <TimeDerivative value="(rate * INPUT) / time_step_size" variable="OUTPUT"/>
      <OnCondition test="OUTPUT .lt. 0">
        <EventOut port="spike"/>
      </OnCondition>
    </Dynamics>
  </ComponentType>
  <ComponentType description="..." extends="pnlMechanism" name="inputNode">
    <Parameter dimension="none" name="variable"/>
    <Attachments name="synapses" type="basePointCurrentDL"/>
    <Dynamics>
      <DerivedVariable dimension="none" exposure="V" name="V" value="0"/>
      <DerivedVariable dimension="none" exposure="OUTPUT" name="OUTPUT" value="variable"/>
      <OnCondition test="OUTPUT .lt. 0">
        <EventOut port="spike"/>
      </OnCondition>
    </Dynamics>
  </ComponentType>
  <ComponentType description="..." extends="pnlTransferMechanism" name="pnlLinearFunctionTM">
    <Parameter dimension="none" name="slope"/>
    <Parameter dimension="none" name="intercept"/>
    <Attachments name="synapses" type="basePointCurrentDL"/>
    <Dynamics>
      <DerivedVariable dimension="none" exposure="INPUT" name="INPUT" reduce="add" select="synapses[*]/I"/>
      <DerivedVariable dimension="none" exposure="V" name="V" value="0"/>
      <DerivedVariable dimension="none" exposure="OUTPUT" name="OUTPUT" value="INPUT*slope + intercept"/>
      <OnCondition test="OUTPUT .lt. 0">
        <EventOut port="spike"/>
      </OnCondition>
    </Dynamics>
  </ComponentType>
  <ComponentType description="..." extends="pnlTransferMechanism" name="pnlLogisticFunctionTM">
    <Parameter dimension="none" name="gain"/>
    <Parameter dimension="none" name="bias"/>
    <Parameter dimension="none" name="x_0"/>
    <Parameter dimension="none" name="offset"/>
    <Attachments name="synapses" type="basePointCurrentDL"/>
    <Dynamics>
      <DerivedVariable dimension="none" exposure="INPUT" name="INPUT" reduce="add" select="synapses[*]/I"/>
      <DerivedVariable dimension="none" exposure="V" name="V" value="0"/>
      <DerivedVariable dimension="none" exposure="OUTPUT" name="OUTPUT" value="1/(1+exp(-1*gain*(INPUT + bias - x_0)+offset))"/>
      <OnCondition test="OUTPUT .lt. 0">
        <EventOut port="spike"/>
      </OnCondition>
    </Dynamics>
  </ComponentType>
  <ComponentType description="..." extends="pnlTransferMechanism" name="pnlExponentialFunctionTM">
    <Parameter dimension="none" name="scale"/>
    <Parameter dimension="none" name="rate"/>
    <Parameter dimension="none" name="bias"/>
    <Parameter dimension="none" name="offset"/>
    <Attachments name="synapses" type="basePointCurrentDL"/>
    <Dynamics>
      <DerivedVariable dimension="none" exposure="INPUT" name="INPUT" reduce="add" select="synapses[*]/I"/>
      <DerivedVariable dimension="none" exposure="V" name="V" value="0"/>
      <DerivedVariable dimension="none" exposure="OUTPUT" name="OUTPUT" value="scale * exp((rate * INPUT) + bias) + offset"/>
      <OnCondition test="OUTPUT .lt. 0">
        <EventOut port="spike"/>
      </OnCondition>
    </Dynamics>
  </ComponentType>
  <ComponentType description="Base type for dimensionless graded synapses" extends="baseSynapseDL" name="baseGradedSynapseDL"/>
  <ComponentType description="Dummy synapse which emits no current. Used as presynaptic endpoint for analog synaptic connection." extends="baseGradedSynapseDL" name="silentSynapseDL">
    <Property defaultValue="1" dimension="none" name="weight"/>
    <Exposure dimension="none" name="I"/>
    <InstanceRequirement name="peer" type="baseGradedSynapse"/>
    <Dynamics>
      <DerivedVariable dimension="none" exposure="I" name="I" value="0"/>
    </Dynamics>
  </ComponentType>
  <ComponentType description="..." extends="baseGradedSynapseDL" name="synapseDL">
    <Property defaultValue="1" dimension="none" name="weight"/>
    <Constant dimension="time" name="SEC" value="1s"/>
    <Exposure dimension="none" name="I"/>
    <Requirement dimension="none" name="OUTPUT"/>
    <InstanceRequirement name="peer" type="synapseDL"/>
    <Dynamics>
      <DerivedVariable dimension="none" name="rpeer" select="peer/OUTPUT"/>
      <DerivedVariable dimension="none" exposure="I" name="I" value="weight * SEC * rpeer"/>
    </Dynamics>
  </ComponentType>
  <Component id="a_input" type="inputNode" variable="0.1"/>
  <Component id="a" intercept="2" slope="2" type="pnlLinearFunctionTM"/>
  <Component bias="0.0" gain="1.0" id="b" offset="0.0" type="pnlLogisticFunctionTM" x_0="0.0"/>
  <Component bias="0.0" id="c" offset="0.0" rate="1.0" scale="1.0" type="pnlExponentialFunctionTM"/>
  <Component id="d" rate="0.05" time_step_size="0.1s" type="pnlSimpleIntegratorMechanism"/>
  <Component id="rsDL" type="synapseDL"/>
  <Component id="silentSyn_proj_input" type="silentSynapseDL"/>
  <Component id="silentSyn_proj0" type="silentSynapseDL"/>
  <Component id="silentSyn_proj1" type="silentSynapseDL"/>
  <Component id="silentSyn_proj2" type="silentSynapseDL"/>
  <Component id="silentSyn_proj3" type="silentSynapseDL"/>
</Lems>
